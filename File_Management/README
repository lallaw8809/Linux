###################### File Management ##############################

File Descriptor :
-----------------
	fd is a non-negative number.
		------------------
		| file descriptor |
		-------------------
		|  0 | Stdin (R)  |
		-------------------
		|  1 | Stdout (W) |
		-------------------
		|  2 | Stderr (R) |
		-------------------

file_create.c : Program to create a file.
		<./create> <file_name>
file_write.c  : Program to write a text into a file.
		<./write> <file_name> <text>
file_append.c : Program to append a text into a file.
		<./write> <file_name> <text_to_append>
file_read.c   : Program to read a content in a file
		<./read> <file_name>
		Note:	
			This will read a file upto Null terminate.

******************************* lseek ****************************************************
Sytex :
	off_t lseek(int fd, off_t offset, int whence);
	whence:
		SEEK_SET
		      The offset is set to offset bytes.
	       SEEK_CUR
		      The offset is set to its current location plus offset bytes.
	       SEEK_END
		      The offset is set to the size of the file plus offset bytes.

lseek_set.c : Program to read a file using SEEK_SET command
lseek_cur.c : Program to read a file using SEEK_CUR command
lseek_end.c : Program to read a file using SEEK_END command
leek.c      : Program to read a file usinng SEEK_SET, SEEK_CUR and SEEK_END

----------------------------- File Types --------------------------------------------------
file_types:
	In linux, there are 7 different file types are avilable,
	- : regular file
	d : directory
	c : character device file
	b : block device file
	s : local socket file
	p : named pipe
	l : symbolic link

	file_type.c        : Program to get the types of the file
	file_create_type.c : Program to create a different types of file

Procedure to create a file:	
	Create file types (-,d,c,b,s and p)
		<./file_creat_type> <file_name>
	Link :
	1)Soft Link
		<./file_creat_type> <file> <link_file>
	   Example: link_file is linked with a file
		link_file -> file
	2) Hard Link
		<./file_creat_type> <file> <link_file>
	   Example : file and link_file holds the same inode number

************************************ stat *************************************************
Get the information abour the file.

System call:
	int stat(const char *path, struct stat *buf);
	int fstat(int fd, struct stat *buf);
	int lstat(const char *path, struct stat *buf);

------------------------------------------------------------------------------
|          stat/lstat                 |           fstat                      |
------------------------------------------------------------------------------
| *) status of the file system        | *) status of the file system	     |
|    and directories                  |    			             |
| *) Takes argument as file path      | *) Takes argument as file descriptor |
| *) File permission is not required. | *) File Permission is required       |
------------------------------------------------------------------------------

stat vs lstat:
	The lstat() function has the same effect as stat(),
	except when the specified path refers to a symbolic link.
	In symbolic link file,
	stat  : refers a symbalic lined file
	lstat : refers a symbalic file
Example : ln -s f1 soft_link
	  soft_link -> f1
	
	  soft_link : lstat(soft_link)
	  f1        : stat(soft_link)

stat.c  : Sample code for to get the status of the file using stat()  
lstat.c : Sample code for to get the status of the file using lstat() 
fstat.c : Sample code for to get the status of the file using fstat() 
-------------------------------------------------------------------------------------------
**************************** dup *************************************************
	*) dup, dup2, dup3 - duplicate a file descriptor
	*) dup() uses the lowest-numbered unused descriptor for the new descriptor.
	*) dup2() and dup3() makes newfd be the copy of oldfd.

System Call:
	int dup(int oldfd);
	int dup2(int oldfd, int newfd);
	int dup3(int oldfd, int newfd, int flags);

Program :
	dup.c  : Sapmle code for dup() system call
	dup2.c : Sapmle code for dup2() system call
	dup3.c : Sapmle code for dup3() system call

--------------------------------------------------------------------------------------------

